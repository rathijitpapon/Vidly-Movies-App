{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/protectedRoute.jsx","components/navbar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/loginForm.jsx","components/logout.jsx","services/userService.js","components/registerForm.jsx","components/common/listGroup.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/common/pagination.jsx","components/common/searchBox.jsx","services/movieService.js","services/genreService.js","utils/paginate.js","components/movies.jsx","components/customers.jsx","components/rentals.jsx","components/movieForm.jsx","components/notFound.jsx","App.js","registerServiceWorker.js","index.js"],"names":["init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJWT","jwt","headers","common","login","email","password","a","tokenKey","http","data","localStorage","setItem","loginWithJWT","logout","removeItem","getCurrentUser","getItem","jwtDecode","e","getJWT","ProtectedRoute","path","Component","component","render","rest","props","to","pathname","state","from","location","NavBar","user","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Fragment","name","Input","label","value","onChange","htmlFor","Select","options","map","option","key","_id","Form","errors","validate","result","Joi","schema","abortEarly","details","item","message","validateProperty","obj","handleSubmit","preventDefault","setState","doSubmit","handleChange","input","currentTarget","errorMessage","disabled","this","LoginForm","username","string","required","window","onSubmit","renderInput","renderButton","Logout","register","RegisterForm","min","userService","ListGroup","items","selectedItem","textProperty","valueProperty","onItemSelect","style","cursor","onClick","defaultProps","TableHeader","raiseSort","sortColumn","order","onSort","renderSortIcon","column","columns","scope","TableBody","renderCell","content","_","index","Table","slice","Like","classes","liked","aria-hidden","MoviesTable","movie","title","onLike","deleteColumn","onDelete","isAdmin","push","movies","Pagination","pagesCount","Math","ceil","itemsCount","pageSize","pages","range","page","currentPage","onPageChange","SearchBox","placeholder","movieURL","getMovie","movieId","saveMovie","body","deleteMovie","getGenres","paginate","pageNumber","startIndex","take","Movies","genres","selectedGenre","searchQuery","handleDelete","originalMovies","filter","m","handleLike","indexOf","handlePageChange","handleGenreSelect","genre","handleSort","handleSearch","query","getPagedData","filtered","toLowerCase","startsWith","orderBy","totalCount","length","marginBottom","Customers","Rentals","MovieForm","genreId","numberInStock","dailyRentalRate","number","max","mapToViewModel","history","match","params","replace","populateGenres","populateMovie","renderSelect","NotFound","App","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.df998465.chunk.js","sourcesContent":["// import Raven from \"raven-js\";\n\nfunction init() {\n  // Raven.config(\"https://e8c44c20201a44bb90f79d9850515fc8@o446601.ingest.sentry.io/5425352\", {\n  //   release: \"1-0-0\",\n  //   environment: \"development-test\"\n  // }).install();\n}\n\nfunction log(error) {\n  console.log(error);\n  // Raven.captureException(error);\n}\n\nexport default {\n  init,\n  log\n};","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    // console.log(\"logging the error\", error);\n    // alert(\"An unexpected error occurred.\");\n    logger.log(error);\n    toast.error(\"An unexpected error occurred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJWT(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJWT\n};","import http from \"./httpService\";\nimport jwtDecode from \"jwt-decode\";\n\nconst apiEndpoint = \"/auth\";\n// const tokenKey = \"token\";\n\nhttp.setJWT(getJWT());\n\nexport async function login(email, password) {\n    const tokenKey = \"token\";\n    const { data: jwt } = await http.post(apiEndpoint, {\n        email,\n        password\n    });\n    localStorage.setItem(tokenKey, jwt);\n}\n\nexport function loginWithJWT(jwt) {\n    const tokenKey = \"token\";\n    localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n    const tokenKey = \"token\";\n    localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n    const tokenKey = \"token\";\n    try {\n        const jwt = localStorage.getItem(tokenKey);\n        return jwtDecode(jwt);\n    } catch (e) {\n        return null;\n    }\n}\n\nexport function getJWT() {\n    const tokenKey = \"token\";\n    return localStorage.getItem(tokenKey);\n}\n\nexport default {\n    login,\n    logout,\n    loginWithJWT,\n    getCurrentUser,\n    getJWT\n};","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getCurrentUser } from \"../services/authService\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n    return (\n        <Route \n            {...rest}\n            render=\n            { \n                props => {\n                    if (!getCurrentUser()) return <Redirect to={{\n                        pathname: \"/login\",\n                        state: { from: props.location }\n                    }} />;\n                    return Component ? <Component {...props} /> : render(props);\n                }\n            }>\n        </Route>\n    )\n};\n\nexport default ProtectedRoute;","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\n\nconst NavBar = ({ user }) => {\n    return ( \n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link className=\"navbar-brand\" to=\"/\">Vidly</Link>\n\n            <button \n                className=\"navbar-toggler\"\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target=\"#navbarSupportedContent\"\n                aria-controls=\"navbarSupportedContent\"\n                aria-expanded=\"false\" \n                aria-label=\"Toggle navigation\"\n            >\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <div className=\"navbar-nav\">\n                    <NavLink className=\"nav-item nav-link active\" to=\"/movies\">\n                        Movies\n                    </NavLink>\n                    <NavLink className=\"nav-item nav-link\" to=\"/customers\">\n                        Customers\n                    </NavLink>\n                    <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\n                        Rentals\n                    </NavLink>\n                    { !user && \n                    <React.Fragment>\n                        <NavLink className=\"nav-item nav-link\" to=\"/login\">\n                            Login\n                        </NavLink>\n                        <NavLink className=\"nav-item nav-link\" to=\"/register\">\n                            Register\n                        </NavLink>\n                    </React.Fragment>}\n                    { user && \n                    <React.Fragment>\n                        <NavLink className=\"nav-item nav-link\" to=\"/profile\">\n                            { user.name }\n                        </NavLink>\n                        <NavLink className=\"nav-item nav-link\" to=\"/logout\">\n                            Logout\n                        </NavLink>\n                    </React.Fragment>}\n                </div>\n            </div>\n        </nav>\n     );\n}\n \nexport default NavBar;","import React from 'react';\n\nconst Input = ({ name, label, value, type, error, onChange }) => {\n    return ( \n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input \n                value={value} \n                onChange={onChange}\n                id={name} \n                name={name}\n                type={type} \n                className=\"form-control\"\n            />\n            { error && <div className=\"alert alert-danger\">{error}</div>}\n        </div>\n     );\n}\n \nexport default Input;","import React from 'react';\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n    return ( \n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <select name={name} id={name} {...rest} className=\"form-control\">\n                <option value=\"\" />\n                {\n                    options.map(option => (\n                        <option key={option._id} value={option._id}>\n                            {option.name}\n                        </option>\n                    ))\n                }\n            </select>\n            { error && <div className=\"alert alert-danger\">{error}</div> }\n        </div>\n    );\n}\n \nexport default Select;","import React, { Component } from 'react';\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n    state = { \n        data: {},\n        errors: {}\n    };\n\n    validate = () => {\n        const result = Joi.validate(this.state.data, this.schema, { abortEarly: false });\n\n        if(!result.error) return null;\n\n        const errors = {};\n        for(let item of result.error.details) {\n            errors[item.path[0]] = item.message;\n        }\n\n        return errors;\n    };\n\n    validateProperty = ({ name, value }) => {\n        const obj = { [name]: value };\n        const schema = { [name]: this.schema[name] };\n        const { error } = Joi.validate(obj, schema);\n\n        return error ? error.details[0].message : null;\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        const errors = this.validate();\n        this.setState({ errors: errors || {} });\n\n        if (errors) return;\n\n        this.doSubmit();\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        const errors = {...this.state.errors};\n        const errorMessage = this.validateProperty(input);\n        if (errorMessage) errors[input.name] = errorMessage;\n        else delete errors[input.name];\n\n        const data ={...this.state.data};\n        data[input.name] = input.value;\n        this.setState({ data: data, errors: errors });\n    }\n\n    renderButton(label) {\n        return (\n            <button\n                disabled={this.validate()}\n                className=\"btn btn-primary\">\n                    {label}\n            </button>\n        )\n    }\n\n    renderSelect(name, label, options) {\n        const { data, errors } = this.state;\n\n        return (\n            <Select\n                name={name}\n                value={data[name]}\n                label={label}\n                options={options}\n                onChange={this.handleChange}\n                error={errors[name]}\n            />\n        );\n    }\n\n    renderInput(name, label, type) {\n        const { data, errors } = this.state;\n        \n        return (\n            <Input\n                name={name}\n                label={label}\n                value={data[name]}\n                type={type}\n                error={errors[name]}\n                onChange={this.handleChange}\n            />\n        )\n    }\n}\n \nexport default Form;","import React from 'react';\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getCurrentUser, login } from \"../services/authService\";\nimport { Redirect } from 'react-router-dom';\n\nclass LoginForm extends Form {\n\n    state = {\n        data: {\n            username: \"\",\n            password: \"\"\n        },\n        errors: {\n            \n        }\n    };\n\n    schema = {\n        username: Joi.string().required().label(\"Username\"),\n        password: Joi.string().required().label(\"Password\")\n    };\n\n    doSubmit = async () => {\n        try {\n            await login(this.state.data.username, this.state.data.password);\n            const { state } = this.props.location\n            window.location = state ? state.from.pathname : \"/\";\n        } catch (e) {\n            if(e.response && e.response.status === 400) {\n                const errors = {...this.state.errors};\n                errors.username = e.response.data;\n                this.setState({errors: errors});\n            }\n        }\n    }\n\n    render() { \n        if (getCurrentUser()) return <Redirect to=\"/\" />;\n        return ( \n            <div>\n                <h1>Login</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {this.renderInput(\"username\", \"Username\", \"text\")}\n                    {this.renderInput(\"password\", \"Password\", \"password\")}\n                    {this.renderButton(\"Login\")}\n                </form>\n            </div>\n         );\n    }\n}\n \nexport default LoginForm;","import { Component } from 'react';\nimport { logout } from \"../services/authService\";\n\nclass Logout extends Component {\n\n    componentDidMount() {\n        logout();\n        window.location = \"/\";\n    }\n    \n\n    render() {\n        return null;\n    }\n}\n\nexport default Logout;","import http from \"./httpService\";\n\nconst apiEndpoint = \"/users\";\n\nexport function register(user) {\n    return http.post(apiEndpoint, {\n        email: user.username,\n        password: user.password,\n        name: user.name\n    });\n}\n\n","import React from 'react';\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport * as userService from \"../services/userService\";\nimport { loginWithJWT } from \"../services/authService\";\n\nclass RegisterForm extends Form {\n\n    state = {\n        data: {\n            username: \"\",\n            password: \"\",\n            name: \"\"\n        },\n        errors: {\n            \n        }\n    };\n\n    schema = {\n        username: Joi.string().required().email().label(\"Username\"),\n        password: Joi.string().required().min(5).label(\"Password\"),\n        name: Joi.string().required().label(\"Name\")\n    };\n\n    doSubmit = async () => {\n        try {\n            const response = await userService.register(this.state.data);\n            loginWithJWT(response.headers[\"x-auth-token\"]);\n            window.location = \"/\";\n        } catch (e) {\n            if(e.response && e.response.status === 400) {\n                const errors = {...this.state.errors};\n                errors.username = e.response.data;\n                this.setState({errors: errors});\n            }\n        }\n    }\n\n    render() { \n        return ( \n            <div>\n                <h1>Register</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {this.renderInput(\"username\", \"Username\", \"text\")}\n                    {this.renderInput(\"password\", \"Password\", \"password\")}\n                    {this.renderInput(\"name\", \"Name\", \"text\")}\n                    {this.renderButton(\"Register\")}\n                </form>\n            </div>\n         );\n    }\n}\n \nexport default RegisterForm;","import React from 'react';\n\nconst ListGroup = (props) => {\n    const { items, selectedItem, textProperty, valueProperty, onItemSelect } = props;\n\n    return ( \n        <ul className=\"list-group\">\n            { items.map(item => (\n                <li style={{cursor: \"pointer\"}} onClick={() => onItemSelect(item) } key={item[valueProperty]} className={ item === selectedItem ? \"list-group-item active\" : \"list-group-item\"}>{item[textProperty]}</li>\n            )) }\n        </ul>\n     );\n}\n\nListGroup.defaultProps = {\n    textProperty: \"name\",\n    valueProperty: \"_id\",\n};\n \nexport default ListGroup;","import React, { Component } from 'react'\n\nclass TableHeader extends Component {\n    raiseSort = path => {\n        const sortColumn = {...this.props.sortColumn};\n        if (sortColumn.path === path) \n            sortColumn.order = (sortColumn.order === \"asc\") ? \"desc\" : \"asc\";\n        else {\n            sortColumn.path = path;\n            sortColumn.order = \"asc\";\n        }\n\n        this.props.onSort(sortColumn);\n    }\n\n    renderSortIcon = column => {\n        if(column.path !== this.props.sortColumn.path) return null;\n\n        if(this.props.sortColumn.order === \"asc\") return ( <i className=\"fa fa-sort-asc\"></i> )\n        return ( <i className=\"fa fa-sort-desc\"></i> )\n    };\n\n    render() { \n        return ( \n            <thead className=\"thead-dark\">\n                <tr>\n                    { this.props.columns.map(column => (\n                        <th key={column.path || column.key} style={{cursor: \"pointer\"}} onClick={() => this.raiseSort(column.path)} scope=\"col\">{column.label} {this.renderSortIcon(column)}</th>\n                    )) }\n                </tr>\n            </thead>\n         );\n    }\n}\n \nexport default TableHeader;","import React, { Component } from 'react';\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n\n    renderCell = (item, column) => {\n        if (column.content) return column.content(item);\n        return _.get(item, column.path)\n    };\n\n    render() { \n        const { data, columns } = this.props;\n\n        return ( \n            <tbody>\n                { data.map((item, index) => (\n                    <tr key={item._id}>\n                        <th scope=\"row\">{index + 1}</th>\n                        { columns.map(column => (\n                            <td key={item._id + (column.path || column.key)}>{ this.renderCell(item, column) }</td>\n                        )) }\n                    </tr>\n                )) }\n                {/* {data.map((item, index) => {\n                    return (\n                        <tr key={movie._id}>\n                        <td>{movie.title}</td>\n                        <td>{movie.genre.name}</td>\n                        <td>{movie.numberInStock}</td>\n                        <td>{movie.dailyRentalRate}</td>\n                        <td>\n                            <Like\n                            liked={movie.liked}\n                            onClick={() => onLike(movie)}\n                            />\n                        </td>\n                        <td>\n                            <button\n                            onClick={() => onDelete(movie)}\n                            className=\"btn btn-danger btn-sm\"\n                            >\n                            Delete\n                            </button>\n                        </td>\n                        </tr>\n                    );\n                    })} */}\n            </tbody>\n         );\n    }\n}\n \nexport default TableBody;","import React from 'react';\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\nimport _ from \"lodash\";\n\nconst Table = (props) => {\n\n    const { columns, sortColumn, onSort, data } = props;\n\n    return ( \n        <table className=\"table table-striped table-bordered table-hover\">\n            <TableHeader\n                columns={columns}\n                sortColumn={sortColumn}\n                onSort={onSort}\n            />\n            <TableBody\n                data={data}\n                columns={_.slice(columns, [1])}\n            />\n        </table>\n     );\n}\n \nexport default Table;\n","import React, { Component } from \"react\";\n\nclass Like extends Component {\n  render() {\n    let classes = \"fa fa-heart\";\n    if (!this.props.liked) classes += \"-o\";\n    return (\n      <i\n        style={{ cursor: \"pointer\" }}\n        onClick={this.props.onClick}\n        className={classes}\n        aria-hidden=\"true\"\n      ></i>\n    );\n  }\n}\n\nexport default Like;\n","import React, { Component } from 'react';\nimport Table from \"./common/table\";\nimport Like from \"./common/like\";\nimport { Link } from 'react-router-dom';\nimport { getCurrentUser } from \"../services/authService\";\n\nclass MoviesTable extends Component {\n\n    columns = [\n        {\n            key: \"number\",\n            label: \"#\"\n        },\n        {\n            path: \"title\",\n            label: \"Title\",\n            content: movie => (\n                <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n            )\n        },\n        {\n            path: \"genre.name\",\n            label: \"Genre\"\n        },\n        {\n            path: \"numberInStock\",\n            label: \"Stock\"\n        },\n        {\n            path: \"dailyRentalRate\",\n            label: \"Rate\"\n        },\n        {\n            key: \"like\",\n            content: movie => (<Like\n                liked={movie.liked}\n                onClick={() => this.props.onLike(movie)}\n            />)\n        },\n    ];\n\n    deleteColumn = {\n        key: \"delete\",\n        content: movie => (\n            <button\n                onClick={() => this.props.onDelete(movie)}\n                className=\"btn btn-danger btn-sm\">\n                Delete\n            </button>\n        )\n    };\n\n    constructor() {\n        super ();\n        const user = getCurrentUser();\n        if (user && user.isAdmin)\n            this.columns.push(this.deleteColumn);\n    }\n\n    render() { \n        const { movies, onSort, sortColumn } = this.props;\n\n        return ( \n            <Table\n                columns={this.columns}\n                data={movies}\n                sortColumn={sortColumn}\n                onSort={onSort}\n            />\n        );\n    }\n}\n \nexport default MoviesTable;","import React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\n\nconst Pagination = (props) => {\n    const pagesCount = Math.ceil(props.itemsCount / props.pageSize);\n    if (pagesCount === 1) return null;\n    const pages = _.range(1, pagesCount + 1);\n\n    return ( \n        <nav>\n            <ul className=\"pagination\">\n                { pages.map(page => (\n                    <li  style={{cursor: \"pointer\"}} key={page} className={ page === props.currentPage ? \"page-item active\" : \"page-item\" }>\n                        <button onClick={() => props.onPageChange(page)} className=\"page-link\">{page}</button>\n                    </li>\n                )) }\n            </ul>\n        </nav>\n     );\n};\n\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n}\n \nexport default Pagination;","import React from 'react';\n\nconst SearchBox = ({ value, onChange }) => {\n    return ( \n        <input\n            type=\"text\"\n            name=\"query\"\n            className=\"form-control my-3\"\n            placeholder=\"Search...\"\n            value={value}\n            onChange={e => onChange(e.currentTarget.value)}\n        />\n    );\n}\n \nexport default SearchBox;","import http from \"./httpService\";\n\nconst apiEndpoint = \"/movies\";\n\nfunction movieURL(id) {\n    return `${apiEndpoint}/${id}`;\n}\n\nexport function getMovies() {\n    return http.get(apiEndpoint);\n}\n\nexport function getMovie(movieId) {\n    return http.get(movieURL(movieId));\n}\n\nexport function saveMovie(movie) {\n    if (movie._id) {\n        const body = {...movie};\n        delete body._id;\n\n        return http.put(movieURL(movie._id), body);\n    }\n\n\n    return http.post(apiEndpoint, movie);\n}\n\nexport function deleteMovie(movieId) {\n    return http.delete(movieURL(movieId));\n}","import http from \"./httpService\";\n\nexport function getGenres() {\n    return http.get(\"/genres\");\n}","import _ from 'lodash';\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return _(items).slice(startIndex).take(pageSize).value();\n}","import React, { Component } from \"react\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport SearchBox from \"./common/searchBox\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport { paginate } from \"../utils/paginate\";\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    pageSize: 4,\n    currentPage: 1,\n    selectedGenre: null,\n    searchQuery: \"\",\n    sortColumn: {\n      path: \"title\",\n      order: \"asc\"\n    }\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n\n    const { data: movies } = await getMovies();\n    this.setState({ \n      movies: movies,\n      genres: genres,\n      selectedGenre: genres[0]\n     });\n  }\n\n  handleDelete = async (movie) => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\n    this.setState({ movies: movies });\n\n    try {\n      await deleteMovie(movie._id);\n    } catch (e) {\n      if(e.response && e.response.status === 404)\n        toast.error(\"This movie has already been deleted!\");\n\n      this.setState({ movies: originalMovies });\n    }\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies: movies });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  }\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn: sortColumn });\n  }; \n\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  }\n\n  getPagedData = () => {\n    let filtered = this.state.movies;\n    if (this.state.searchQuery) {\n      filtered = this.state.movies.filter(\n        m => m.title.toLowerCase().startsWith(this.state.searchQuery.toLowerCase())\n      );\n    }\n    else if(this.state.selectedGenre && this.state.selectedGenre.name !== \"All Genres\") {\n      filtered = this.state.movies.filter(m => m.genre._id === this.state.selectedGenre._id);\n    }\n\n    const sorted = _.orderBy(filtered, [this.state.sortColumn.path], [this.state.sortColumn.order]);\n\n    const movies = paginate(sorted, this.state.currentPage, this.state.pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  }\n\n  render() {\n    const { user } = this.props;\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup \n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n\n        <div className=\"col\">\n\n          {user && \n          <Link \n            to=\"/movies/new\"\n            className=\"btn btn-primary\"\n            style={{ marginBottom: 20 }}\n          >\n            New Movie\n          </Link>}\n\n          <p>Showing {totalCount} movies in the database.</p>\n\n          <SearchBox value={this.state.searchQuery} onChange={this.handleSearch} />\n          \n          <MoviesTable \n            movies={movies}\n            sortColumn={this.state.sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          \n          <Pagination \n          itemsCount={totalCount} \n          pageSize={this.state.pageSize} \n          currentPage={this.state.currentPage}\n          onPageChange={this.handlePageChange} \n          />\n        </div>\n\n        \n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React from 'react';\n\nconst Customers = () => {\n    return ( \n        <h1>Customers</h1>\n     );\n}\n \nexport default Customers;","import React from 'react';\n\nconst Rentals = () => {\n    return ( \n        <h1>Rentals</h1>\n     );\n}\n \nexport default Rentals;","import React from 'react';\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMovie, saveMovie } from '../services/movieService';\nimport { getGenres } from \"../services/genreService\";\n\nclass MovieForm extends Form {\n\n    state = {\n        data: {\n            title: \"\",\n            genreId: \"\",\n            numberInStock: \"\",\n            dailyRentalRate: \"\"\n        },\n        genres: [],\n        errors: {\n            \n        }\n    };\n\n    schema = {\n        _id: Joi.string(),\n        title: Joi.string().required().label(\"Title\"),\n        genreId: Joi.string().required().label(\"Genre\"),\n        numberInStock: Joi.number().required().min(0).max(100).label(\"Number in Stock\"),\n        dailyRentalRate: Joi.number().required().min(0).max(10).label(\"Daily Rental Rate\")\n    };\n\n    async populateGenres() {\n        const { data: genres } = await getGenres();\n        this.setState({ genres });\n    }\n\n    async populateMovie() {\n        try {\n            const movieId = this.props.match.params.id;\n            if (movieId === \"new\") return;\n\n            const { data: movie } = await getMovie(movieId);\n            this.setState({ data: this.mapToViewModel(movie) });\n        } catch (e) {\n            if(e.response && e.response.status === 404)\n                this.props.history.replace(\"/not-found\");\n        }\n    }\n\n    async componentDidMount() {\n        await this.populateGenres();\n        await this.populateMovie();\n    }\n\n    mapToViewModel = (movie) => {\n        return { \n            _id: movie._id,\n            title: movie.title,\n            genreId: movie.genre._id,\n            numberInStock: movie.numberInStock,\n            dailyRentalRate: movie.dailyRentalRate\n        };\n    }\n\n    doSubmit = async () => {\n        await saveMovie(this.state.data);\n\n        this.props.history.push(\"/movies\");\n    }\n\n    render() { \n        return ( \n            <div>\n                <h1>Movie Form</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {this.renderInput(\"title\", \"Title\", \"text\")}\n                    {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n                    {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n                    {this.renderInput(\"dailyRentalRate\", \"Rate\", \"number\")}\n                    {this.renderButton(\"Save\")}\n                </form>\n            </div>\n         );\n    }\n}\n \nexport default MovieForm;","import React from 'react';\n\nconst NotFound = () => {\n    return ( \n        <h1>NotFound</h1>\n     );\n}\n \nexport default NotFound;","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport ProtectedRoute from \"./components/protectedRoute\";\nimport { ToastContainer } from 'react-toastify';\nimport Navbar from \"./components/navbar\";\nimport LoginForm from './components/loginForm';\nimport Logout from './components/logout';\nimport RegisterForm from \"./components/registerForm\";\nimport Movies from \"./components/movies\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport MovieForm from './components/movieForm';\nimport NotFound from \"./components/notFound\";\nimport { getCurrentUser } from './services/authService';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n\n  state = {}\n\n  componentDidMount() {\n    const user = getCurrentUser();\n    this.setState({ user: user });\n  }\n  \n\n  render() {\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <Navbar user={this.state.user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/login\" component={LoginForm}></Route>\n            <Route path=\"/logout\" component={Logout}></Route>\n            <Route path=\"/register\" component={RegisterForm}></Route>\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm}></ProtectedRoute>\n            <Route \n            path=\"/movies\"\n            render={props =>  <Movies {...props} user={this.state.user} /> }>\n            </Route>\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rentals}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { process } from 'joi-browser';\n\nReactDOM.render( \n    <BrowserRouter>\n        < App / >\n    </BrowserRouter> , document.getElementById('root')\n);\nregisterServiceWorker();"],"sourceRoot":""}